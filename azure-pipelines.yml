pool:
  vmImage: 'ubuntu-latest'

name: $(BuildID)-$(Build.SourceBranchName)

variables:
  ${{ if notIn(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    buildImage: false
    deployService: false
    deployEnvironment: 'none'
    imageName: 'none'
    imageTags: 'none'
    proxyServiceName: schedule-rtu_bot
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    buildImage: true
    deployService: true
    deployEnvironment: production
    imageName: 'rtuitlab/schedule-rtu-bot'
    imageTags: |
      $(Build.BuildId)
      latest
    proxyServiceName: schedule-rtu_bot

stages:
- stage: build
  condition: and(succeeded(), ${{variables.buildImage}})
  jobs:
    - job: packApi
      displayName: Pack docker image
      steps:
        - task: Docker@2
          displayName: buildAndPush
          inputs:
            containerRegistry: 'rtuitlab connection by admin'
            repository: ${{variables.imageName}}
            command: 'buildAndPush'
            Dockerfile: './Dockerfile'
            buildContext: './'
            tags: ${{variables.imageTags}}
- stage: deploy
  condition: and(succeeded(), ${{variables.deployService}})
  jobs:
    - deployment: DeployBot
      displayName: Deploy bot
      pool:
        vmImage: 'ubuntu-latest'
      environment: ${{variables.deployEnvironment}}
      strategy:
        runOnce:
          on:
            failure:
              steps:
                - download: none
                - task: SSH@0
                  inputs:
                    sshEndpoint: 'swarm manager'
                    runOptions: 'commands'
                    commands: 'docker service rollback ${{variables.proxyServiceName}}'
                    readyTimeout: '20000'
          deploy:
            steps:
              - download: none
              - task: SSH@0
                inputs:
                  sshEndpoint: 'swarm manager'
                  runOptions: 'commands'
                  commands: 'docker service update --image ${{variables.imageName}}:$(Build.BuildId) ${{variables.proxyServiceName}} --with-registry-auth'
                  readyTimeout: '20000'