import telebot
import requests

bot = telebot.TeleBot("1695146161:AAEcW2Rk2Fo39dGGMvnx2Kkz7qZ_4iFygx4")
sm = "ü§ñ"
print(bot.get_me())


@bot.message_handler(commands=['start'])
def handler_exec(message):
    bot.send_message(message.from_user.id, "/today <–≥—Ä—É–ø–ø–∞> - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n"
                                           "/tomorrow <–≥—Ä—É–ø–ø–∞> - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞\n"
                                           "/week <–≥—Ä—É–ø–ø–∞> - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—Ä–µ –Ω–∞ –Ω–µ–¥–µ–ª—é")


@bot.message_handler(content_types=['text'])
def handler_text(message):
    print(str(message.from_user.id) + " " + message.text)
    if message.text[0] == "/":
        try:
            group = message.text.split(" ", 1)[1]
        except IndexError:
            return
        if "today" in message.text:
            res = requests.get(f"https://schedule-rtu.rtuitlab.dev/api/schedule/{group}/today")
            lessons = res.json()
            rez = ""
            for i in lessons:
                j = i['lesson']
                o = i['time']
                try:
                    rez += f"–ê—É–¥–∏—Ç–æ—Ä–∏—è: {j['classRoom']}\n–ù–∞–∑–≤–∞–Ω–∏–µ: {j['name']}\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {j['teacher']}\n" \
                           f"–¢–∏–ø: {j['type']}\n–í—Ä–µ–º—è: {o['start']} - {o['end']}\n\n"
                except TypeError:
                    pass
            try:
                bot.send_message(message.from_user.id, rez)
            except Exception as e:
                if "empty" in str(e):
                    bot.send_message(message.from_user.id, "–ü–∞—Ä –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
        elif "tomorrow" in message.text:
            res = requests.get(f"https://schedule-rtu.rtuitlab.dev/api/schedule/{group}/tomorrow")
            lessons = res.json()
            rez = ""
            for i in lessons:
                j = i['lesson']
                o = i['time']
                try:
                    rez += f"–ê—É–¥–∏—Ç–æ—Ä–∏—è: {j['classRoom']}\n–ù–∞–∑–≤–∞–Ω–∏–µ: {j['name']}\n–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {j['teacher']}\n" \
                           f"–¢–∏–ø: {j['type']}\n–í—Ä–µ–º—è: {o['start']} - {o['end']}\n\n"
                except TypeError:
                    pass
            try:
                bot.send_message(message.from_user.id, rez)
            except Exception as e:
                if "empty" in str(e):
                    bot.send_message(message.from_user.id, "–ü–∞—Ä –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
        elif "week" in message.text:
            pass


try:
    while True:
        try:
            bot.polling(none_stop=True, interval=0)  # –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ api
        except Exception as e:
            pass
except Exception as e:
    print(e)
